<!DOCTYPE html>
<html lang="zh-cn"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>【算法16】递归算法的时间复杂度终结篇 - python27 - 博客园</title>
<link type="text/css" rel="stylesheet" href="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/blog-common.css">
<link id="MainCss" type="text/css" rel="stylesheet" href="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/bundle-darkgreentrip.css">
<link type="text/css" rel="stylesheet" href="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/102684.css">
<link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/python27/rss">
<link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/python27/rsd.xml">
<link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/python27/wlwmanifest.xml">
<script src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/jquery.js" type="text/javascript"></script>  
<script type="text/javascript">var currentBlogApp = 'python27', cb_enable_mathjax=true;</script>
<script src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/blog-common.js" type="text/javascript"></script>
<script type="text/x-mathjax-config;executed=true">MathJax.Hub.Config({
  tex2jax: { inlineMath: [['$','$'], ['\\(','\\)']] },
  TeX: { equationNumbers: { autoNumber: ['AMS'], useLabelIds: true } },
  'HTML-CSS': { linebreaks: { automatic: true } },
  SVG: { linebreaks: { automatic: true } }});</script><script src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/MathJax.js" type="text/javascript"></script><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Hover_Arrow {position: absolute; width: 15px; height: 11px; cursor: pointer}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 2px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 2px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; color: #666666}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: 1em}
.MathJax_MenuRadioCheck.RTL {right: 1em; left: auto}
.MathJax_MenuLabel {padding: 2px 2em 4px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #CCCCCC; margin: 4px 1px 0px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: Highlight; color: HighlightText}
.MathJax_Menu_Close {position: absolute; width: 31px; height: 31px; top: -15px; left: -15px}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1px; bottom: 2px; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style></head>
<body><div style="display: none;" id="MathJax_Message"></div>
<a name="top"></a>

<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
	<a id="lnkBlogLogo" href="http://www.cnblogs.com/python27/"><img id="blogLogo" src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/logo.gif" alt="返回主页"></a>			
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/python27/">Thoughts of Algorithms</a></h1>
<h2></h2>



		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="MyLinks1_HomeLink" class="menu" href="http://www.cnblogs.com/">博客园</a></li>
<li><a id="MyLinks1_MyHomeLink" class="menu" href="http://www.cnblogs.com/python27/">首页</a></li>
<li></li>
<li><a id="MyLinks1_ContactLink" class="menu" rel="nofollow" href="http://msg.cnblogs.com/send/python27">联系</a></li>
<li><a id="MyLinks1_Syndication" class="menu" href="http://www.cnblogs.com/python27/rss">订阅</a>
<!--<a id="MyLinks1_XMLLink" class="aHeaderXML" href="http://www.cnblogs.com/python27/rss"><img src="http://www.cnblogs.com/images/xml.gif" alt="订阅" /></a>--></li>
<li><a id="MyLinks1_Admin" class="menu" rel="nofollow" href="http://i.cnblogs.com/">管理</a></li>
</ul>
		<div class="blogStats">
			
			
<!--done-->
随笔- 54&nbsp;
文章- 1&nbsp;
评论- 126&nbsp;

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		
<div id="post_detail">
<!--done-->
<div id="topics">
	<div class="post">
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/python27/archive/2011/12/09/2282486.html">【算法16】递归算法的时间复杂度终结篇</a>
		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body"><p>　　开篇前言：为什么写这篇文章？笔者目前在学习各种各样的算法，在这个过程中，
频繁地碰到到递归思想和分治思想，惊讶于这两种的思想的伟大与奇妙的同时，经常要面对的一个问题就是，对于一个给定的递归算法或者用分治思想缩小问题规模
的算法，如何求解这个算法的时间复杂度呢？在google过很多的博文后，感觉这些博文总结的方法，有很好优秀的地方，但是都不够全面，有感于此，笔者决
定总结各家之长，作此博文，总结各种方法于此，有不足之处，欢迎各位批评指证！</p>
<p>　　在算法的分析中，当一个算法中包含递归调用时，其时间复杂度的分析会转化成为一个递归方程的求解。而对递归方程的求解，方法多种多样，不一而足。本文主要介绍目前主流的方法：代入法，迭代法，公式法，母函数法，差分方程法。</p>
<hr>
<p>&nbsp;　　【代入法】代入法首先要对这个问题的时间复杂度做出预测，然后将预测带入原来的递归方程，如果没有出现矛盾，则是可能的解，最后用数学归纳法证明。</p>
<p>　　【举 &nbsp; 例】我们有如下的递归问题：T(n)=4T(n/2)+O(n)，我们首先预测时间复杂度为O(n<sup>2</sup>),不妨设T(n)=kn<sup>2</sup>（其中k为常数），将该结果带入方程中可得：左=kn<sup>2</sup>，右=4k(n/2)<sup>2</sup>+O(n)=kn<sup>2</sup>+O(n),由于n<sup>2</sup>的阶高于n的阶，因而左右两边是相等的，接下来用数学归纳法进行验证即可。</p>
<hr>
<p>&nbsp;　　【迭代法】迭代法就是迭代的展开方程的右边，直到没有可以迭代的项为止，这时通过对右边的和进行估算来估计方程的解。比较适用于分治问题的求解，为方便讨论起见，给出其递归方程的一般形式：</p>
<p><img src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/2011120916005185.gif" alt=""></p>
<p>　　【举 &nbsp; 例】下面我们以一个简单的例子来说明：T(n)=2T(n/2)+n<sup>2</sup>,迭代过程如下：</p>
<p><img src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/2011120916171695.gif" alt=""></p>
<p>　　容易知道，直到n/2^(i+1)=1时，递归过程结束，这时我们计算如下：</p>
<p><img src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/2011120916272967.gif" alt=""></p>
<p>　　到这里我们知道该算法的时间复杂度为O(n<sup>2</sup>)，上面的计算中，我们可以直接使用无穷等比数列的公式，不用考虑项数i的约束，实际上这两种方法计算的结果是完全等价的，有兴趣的同学可以自行验证。</p>
<hr>
<p>　　【公式法】这个方法针对形如：T(n) = aT(n/b) + 
f(n)的递归方程。这种递归方程是分治法的时间复杂性所满足的递归关系，即一个规模为n的问题被分成规模均为n/b的a个子问题，递归地求解这a个子问
题，然后通过对这a个子问题的解的综合，得到原问题的解。这种方法是对于分治问题最好的解法，我们先给出如下的公式：</p>
<p><img src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/2011120916470378.gif" alt=""></p>
<p>　　公式记忆：我们实际上是比较n^log<sub>b</sub>a和f(n)的阶，如果他们不等，那么T(n)取他们中的较大者，如果他们的阶相等，那么我们就将他们的任意一个乘以logn就可以了。按照这个公式，我们可以计算【迭代法】中提到的例子：O(f(n))=O(n<sup>2</sup>),容易计算另外一个的阶是O(n),他们不等，所以取较大的阶O(n<sup>2</sup>)。太简单了，不是吗？</p>
<p>　　需要注意：上面的公式并不包含所有的情况，比如第一种和第二种情况之间并不包含下面这种情况：f(n)是小于前者，但是并不是多项式的小于前
者。同样后两种的情况也并不包含所有的情况。为了好理解与运用的情况下，笔者将公式表述成如上的情况，但是并不是很严谨，关于该公式的严密讨论，请看<a href="http://blog.csdn.net/metasearch/article/details/4428865" target="_blank">这里</a>。但是公式的不包含的情况，我们很少很少碰到，上面的公式适用范围很广泛的。</p>
<p>　　特别地，对于我们经常碰到的，当f(n)=0时，我们有：</p>
<p><img src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/2011120917042591.gif" alt=""></p>
<hr>
<p>　　【母函数法】母函数是用于对应于一个无穷序列的幂级数。这里我们解决的递归问题是形如：T(n)=c<sub>1</sub>T(n-1)+c<sub>2</sub>T(n-2)+c<sub>3</sub>T(n-3)+...+c<sub>k</sub>T(n-k)+f(n)。为说明问题简便起见，我们选择斐波那契数列的时间复杂度作为例子进行讨论。</p>
<p>　　【举 &nbsp;例】斐波那契数列递归公式：T(n)=T(n-1)+T(n-2)。这里我们假设F(n)为第n项的运算量。则容易得到：F(n)=F(n-1)+F(n-2),其中F(1)=F(2)=1.我们构造如下的母函数：G(x)=F(1)x+F(2)x<sup>2</sup>+F(3)x<sup>3</sup>+......,我们可以推导如下：</p>
<p><img src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/2011120920464578.gif" alt=""></p>
<p>　　上面的方法计算相对来说是比较简单的，关键在于对于母函数的理解，刚开始的时候可能不是很好理解，对于母函数可以参考<a href="http://www.doc88.com/p-39037791334.html" target="_blank">这里</a>和<a href="http://zh.wikipedia.org/wiki/%E6%AF%8D%E5%87%BD%E6%95%B0" target="_blank">维基百科这里</a>。</p>
<hr>
<p>　　【差分方程法】可以将某些递归方程看成差分方程，通过解差分方程的方法来解递归方程，然后对解作出渐近阶估计。这里我们只考虑最长常见的递归形式，形如：T(n)=c<sub>1</sub>T(n-1)+c<sub>2</sub>T(n-2)+c<sub>3</sub>T(n-3)+...+c<sub>k</sub>T(n-k)+f(n)，其中c1,c2,...ck为常数且不等于0；我们对该方程的求解如下：</p>
<p><img src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/2011120921133692.gif" alt=""></p>
<p>　　对应上面的齐次方程的特征方程为：</p>
<p><img src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/2011120921501265.gif" alt=""></p>
<p>　　如果解得t=r是该特征方程的m重根，则这m个解的形式为：{r<sup>n &nbsp; &nbsp;&nbsp;</sup>n*r<sup>n &nbsp; &nbsp; &nbsp;</sup>n<sup>2</sup>r<sup>n &nbsp;&nbsp;</sup>... &nbsp; &nbsp;n<sup>m-1</sup>r<sup>n</sup>},其余的关于复数解的形式和普通的线性方程组的形式类似，不再赘述。接下来，我们要求解该方程的对应非齐次方程组的通解，这里我们针对该方程的特殊形式，不加证明地给出如下的通解形式：</p>
<p><img src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/2011120921591073.png" alt=""></p>
<p>　　则和线性代数中的解一样，原方程的解等于齐次方程组的通解+特解，即：</p>
<p><img src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/2011120922043073.gif" alt=""></p>
<p>　　最后由初始条件确定a(i)的值即可。</p>
<p>　　为了帮助理解，我们举两个例子看看，就明白是怎么回事了。</p>
<p>　　【举 例1】递归方程如下：</p>
<p><img src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/2011120922155574.gif" alt=""></p>
<p>(1)写出对应齐次方程的特征方程：</p>
<p><img src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/2011120922194772.gif" alt=""></p>
<p>得到基础解系为：{t<sub>1</sub><sup>n</sup>, &nbsp;t<sub>2</sub><sup>n</sup>}</p>
<p>(2)计算特解，对于本题，直接观察得特解为：-8</p>
<p>(3)得到原方程解的形式为：<span style="font-size: 16px;">T(n)=a<sub>0</sub>t<sub>1</sub><sup>n</sup>+a<sub>1</sub>t<sub>2</sub><sup>n</sup>-8</span></p>
<p>(4)代入n=0，n=1的情况，得到a0,a1，最后可得:</p>
<p><img src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/2011120922265557.gif" alt=""></p>
<p>　　可以看到该方程形式和上面讨论过的斐波那契数列只差一个常数8，因而两者的时间复杂度是相同的。有兴趣的同学可以按照这个方法再次计算斐波那契数列的时间复杂度验证一下。</p>
<p>　　【举 &nbsp;例2】递归方程如下：</p>
<p><img src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/2011120922331967.gif" alt=""></p>
<p>（1）计算对应齐次方程的基础解析：</p>
<p>特征方程为：C(t)=t^2-4t-4=0,得到一个2重根t=2.因而其基础解为：{2<sup>n</sup> &nbsp; &nbsp; &nbsp;n*2<sup>n</sup>}</p>
<p>（2）由于f(n)=n*2<sup>n</sup>，对应上面表格的最后一种情况，得到特解形式为：<em>T</em>(<em>n</em>)=<em>n</em><sup>2</sup>(<em>p</em><sub>0</sub>+<em>p</em><sub>1</sub><em>n</em>)2<sup>n</sup>代入原递归方程可得：p0=1/2,p1=1/6</p>
<p>（3）原方程解的形式为：T(n)=a<sub>0</sub>*2<sup>n</sup>+a<sub>1</sub>*n*2<sup>n</sup>+n<sup>2</sup>(1/2+n/6)2<sup>n</sup>,代入T(0),T(1)得：a0=a1=0</p>
<p>（4）综上：T(n)=n<sup>2</sup>(1/2+n/6)2<sup>n</sup></p>
<p>因而时间复杂度为：O(n<sup>3</sup>2<sup>n</sup>)</p>
<hr>
<p>&nbsp;</p>
<p>References:</p>
<p>[1]青青的专栏：<a href="http://blog.csdn.net/metasearch/article/details/4428865">http://blog.csdn.net/metasearch/article/details/4428865</a></p>
<p>[2]心灵深处博客：<a href="http://blog.csdn.net/metasearch/article/details/4428865">http://blog.csdn.net/metasearch/article/details/4428865</a></p>
<p>[3]wikipedia中文：母函数</p>
<p>[4]母函数的性质和应用：<a href="http://www.doc88.com/p-39037791334.html">http://www.doc88.com/p-39037791334.html</a></p>
<p>[5]关于递归算法时间复杂度分析的讨论：<a href="http://wenku.baidu.com/view/719b053331126edb6f1a1091.html">http://wenku.baidu.com/view/719b053331126edb6f1a1091.html</a></p>
<p>[6][置顶]递归方程组解的渐进阶的求法——差分方程法：<a href="http://blog.csdn.net/explore_knight/article/details/1788046">http://blog.csdn.net/explore_knight/article/details/1788046</a></p>
<p><span>注：</span></p>
<p><span>1</span><span>）本博客所有的代码环境编译均为</span><span>win7+VC6</span><span>。所有代码均经过博主上机调试。</span></p>
<p><span lang="zh-CN">2</span><span lang="zh-CN">）博主</span><span lang="en-US">python27</span><span lang="zh-CN">对本博客文章享有版权，网络转载请注明出处</span><a href="http://www.cnblogs.com/python27/"><span lang="zh-CN">http://www.cnblogs.com/python27/</span></a><span lang="zh-CN">。对解题思路有任何建议，欢迎在评论中告知。</span></p></div><div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
<div id="BlogPostCategory">分类: <a href="http://www.cnblogs.com/python27/category/337667.html">每天一算法</a></div>
<div id="EntryTag">标签: <a href="http://www.cnblogs.com/python27/tag/%E7%AE%97%E6%B3%95/">算法</a></div>
<div id="blog_post_info"><div id="green_channel">
<a href="javascript:void(0);" id="green_channel_digg" onclick="DiggIt(2282486,cb_blogId,1);green_channel_success(this,'谢谢推荐！');">好文要顶</a>
<a id="green_channel_follow" onclick="c_follow();" href="javascript:void(0);">关注我</a>
<a id="green_channel_favorite" onclick="AddToWz(cb_entryId);return false;" href="javascript:void(0);">收藏该文</a><a id="green_channel_contact" href="http://msg.cnblogs.com/send/python27" target="_blank">联系我</a>
<a id="green_channel_weibo" href="javascript:void(0);" title="分享至新浪微博" onclick="ShareToTsina()"><img src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/icon_weibo_24.png" alt=""></a>
<a id="green_channel_wechat" href="javascript:void(0);" title="分享至微信" onclick="shareOnWechat()"><img src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/wechat.png" alt=""></a>
</div>
<div id="author_profile">
<div id="author_profile_info" class="author_profile_info">
<a href="http://home.cnblogs.com/u/python27/" target="_blank"><img src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/sample_face.gif" class="author_avatar" alt=""></a>
<div id="author_profile_detail" class="author_profile_info">
<a href="http://home.cnblogs.com/u/python27/">python27</a><br>
<a href="http://home.cnblogs.com/u/python27/followees">关注 - 3</a><br>
<a href="http://home.cnblogs.com/u/python27/followers">粉丝 - 132</a>
</div>
</div>
<div class="clear"></div>
<div id="author_profile_honor"></div>
<div id="author_profile_follow">
    <a href="javascript:void(0);" onclick="c_follow();return false;">+加关注</a>
</div>
</div>
<div id="div_digg">										
    <div class="diggit" onclick="votePost(2282486,'Digg')">
        <span class="diggnum" id="digg_count">9</span>
    </div>
	<div class="buryit" onclick="votePost(2282486,'Bury')"> 
		<span class="burynum" id="bury_count">0</span>
	</div>
	<div class="clear"></div>	
	<div class="diggword" id="digg_tips">
    (请您对文章做出评价)
    </div>	
</div>
</div>
<div class="clear"></div>
<div id="post_next_prev"><a href="http://www.cnblogs.com/python27/archive/2011/12/08/2281352.html" class="p_n_p_prefix">« </a> 上一篇：<a href="http://www.cnblogs.com/python27/archive/2011/12/08/2281352.html" title="发布于2011-12-08 22:43">【算法15】字符串的全排列</a><br><a href="http://www.cnblogs.com/python27/archive/2011/12/10/2283617.html" class="p_n_p_prefix">» </a> 下一篇：<a href="http://www.cnblogs.com/python27/archive/2011/12/10/2283617.html" title="发布于2011-12-10 22:44">【算法17】把数组排成最小的数</a><br></div>
</div>


		</div>
		<div class="postDesc">posted @ <span id="post-date">2011-12-09 23:13</span> <a href="http://www.cnblogs.com/python27/">python27</a> 阅读(<span id="post_view_count">8433</span>) 评论(<span id="post_comment_count">5</span>)  <a href="http://i.cnblogs.com/EditPosts.aspx?postid=2282486" rel="nofollow">编辑</a> <a href="#" onclick="AddToWz(2282486);return false;">收藏</a></div>
	</div>
	<script type="text/javascript">var allowComments=true,isLogined=false,cb_blogId=102684,cb_entryId=2282486,cb_blogApp=currentBlogApp,cb_blogUserGuid='75353f6d-d215-e111-b422-842b2b196315',cb_entryCreatedDate='2011/12/9 23:13:00';loadViewCount(cb_entryId);</script>
	
</div><!--end: topics 文章、评论容器-->
</div><a name="!comments"></a><div id="blog-comments-placeholder"><div id="comments_pager_top"></div>
<br>
<div class="feedback_area_title">评论列表</div>
<div class="feedbackNoItems"></div>	

		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#2266540" class="layer">#1楼</a><a name="2266540" id="comment_anchor_2266540"></a>  <span class="comment_date">2011-12-10 00:58</span> <a id="a_comment_author_2266540" href="http://www.cnblogs.com/jy02414216/" target="_blank">好坏</a> <a href="http://msg.cnblogs.com/send/%E5%A5%BD%E5%9D%8F" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2266540" class="blog_comment_body">这个必须顶了 感谢楼主</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2266540,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2266540,'Bury',this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#2266563" class="layer">#2楼</a><a name="2266563" id="comment_anchor_2266563"></a>  <span class="comment_date">2011-12-10 08:46</span> <a id="a_comment_author_2266563" href="http://www.cnblogs.com/wind4869/" target="_blank">windx</a> <a href="http://msg.cnblogs.com/send/windx" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2266563" class="blog_comment_body">果断顶起，感谢楼主博文！</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2266563,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2266563,'Bury',this)">反对(0)</a></div><span id="comment_2266563_avatar" style="display:none;">http://pic.cnblogs.com/face/u334228.jpg?id=14172932</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#2983398" class="layer">#3楼</a><a name="2983398" id="comment_anchor_2983398"></a>  <span class="comment_date">2014-07-14 11:32</span> <a id="a_comment_author_2983398" href="http://www.cnblogs.com/byrybye/" target="_blank">阿水</a> <a href="http://msg.cnblogs.com/send/%E9%98%BF%E6%B0%B4" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_2983398" class="blog_comment_body">必须顶一记，感谢楼主！</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(2983398,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(2983398,'Bury',this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#3018516" class="layer">#4楼</a><a name="3018516" id="comment_anchor_3018516"></a>  <span class="comment_date">2014-08-28 15:10</span> <a id="a_comment_author_3018516" href="http://www.cnblogs.com/lanxuezaipiao/" target="_blank">Alexia(minmin)</a> <a href="http://msg.cnblogs.com/send/Alexia%28minmin%29" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3018516" class="blog_comment_body">比如阶乘T(n)=n*T(n-1)，很容易推出T(n)=n!，按你这么说这个算法的时间复杂度就是O(n!)？实际上它是O(n)啊，这怎么破</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3018516,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3018516,'Bury',this)">反对(1)</a></div><span id="comment_3018516_avatar" style="display:none;">http://pic.cnblogs.com/face/390583/20141208132814.png</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#3311800" class="layer">#5楼</a><a name="3311800" id="comment_anchor_3311800"></a><span id="comment-maxId" style="display:none;">3311800</span><span id="comment-maxDate" style="display:none;">2015/11/23 8:44:51</span>  <span class="comment_date">2015-11-23 08:44</span> <a id="a_comment_author_3311800" href="http://www.cnblogs.com/byrybye/" target="_blank">阿水</a> <a href="http://msg.cnblogs.com/send/%E9%98%BF%E6%B0%B4" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3311800" class="blog_comment_body">MARK</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3311800,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3311800,'Bury',this)">反对(0)</a></div>
			</div>
		</div>
	<div id="comments_pager_bottom"></div></div><script type="text/javascript">var commentManager = new blogCommentManager();commentManager.renderComments(0);</script>
<div id="comment_form" class="commentform">
<a name="commentform"></a>
<div id="divCommentShow"></div>
<div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
<div id="comment_form_container"><div class="login_tips">注册用户登录后才能发表评论，请 <a rel="nofollow" href="javascript:void(0);" class="underline" onclick="return login('commentform');">登录</a> 或 <a rel="nofollow" href="javascript:void(0);" class="underline" onclick="return register();">注册</a>，<a href="http://www.cnblogs.com/">访问</a>网站首页。</div></div>
<div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
<div id="ad_t2"><a href="http://www.ucancode.com/index.htm" target="_blank">【推荐】50万行VC++源码: 大型组态工控、电力仿真CAD与GIS源码库</a><br><a href="http://click.aliyun.com/m/3037/" target="_blank">【阿里云SSD云盘】速度行业领先</a><br></div>
<div id="opt_under_post"></div>
<div id="ad_c1" class="c_ad_block"><a href="http://click.aliyun.com/m/3694/" target="_blank"><img src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/24442-20160202091423569-2078876690.jpg" alt="网站选型" title="网站选型" width="300" height="250"></a></div>
<div id="under_post_news"><div class="itnews c_ad_block"><b>最新IT新闻</b>:<br> ·  <a href="http://news.cnblogs.com/n/538285/" target="_blank">阴谋论数学方程被指存在严重错误</a><br> ·  <a href="http://news.cnblogs.com/n/538284/" target="_blank">马云：2015年最严重的发火是因小二对商家傲慢</a><br> ·  <a href="http://news.cnblogs.com/n/538283/" target="_blank">12306APP新增正晚点查询功能</a><br> ·  <a href="http://news.cnblogs.com/n/538282/" target="_blank">20年后再次回归 任天堂重新进军虚拟现实</a><br> ·  <a href="http://news.cnblogs.com/n/538281/" target="_blank">亚马逊将开设约400家实体书店</a><br>» <a href="http://news.cnblogs.com/" title="IT新闻" target="_blank">更多新闻...</a></div></div>
<div id="under_post_kb"><div class="itnews c_ad_block" id="kb_block"><b>最新知识库文章</b>:<br><div id="kb_recent"> ·  <a href="http://kb.cnblogs.com/page/537914/" target="_blank">消息队列（Message Queue）基本概念</a><br> ·  <a href="http://kb.cnblogs.com/page/536779/" target="_blank">编程每一天（Write Code Every Day）</a><br> ·  <a href="http://kb.cnblogs.com/page/536387/" target="_blank">Docker简介</a><br> ·  <a href="http://kb.cnblogs.com/page/536115/" target="_blank">Docker简明教程</a><br> ·  <a href="http://kb.cnblogs.com/page/535581/" target="_blank">Git协作流程</a><br></div>» <a href="http://kb.cnblogs.com/" target="_blank">更多知识库文章...</a></div></div>
<div id="HistoryToday" class="c_ad_block"></div>
<script type="text/javascript">
$(function () {
    setTimeout(function () { incrementViewCount(cb_entryId); }, 50);
    deliverAdT2();
    deliverAdC1();    
    loadNewsAndKb();
    loadBlogSignature();
    LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
    GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
    loadOptUnderPost();
    GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);    
});
</script>
</div>


	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<!--done-->
<div class="newsItem">
<h3 class="catListTitle">公告</h3>
	<div id="blog-news"><a href="https://github.com/python27"><img style="position: absolute; top: 0; right: 0; border: 0;" src="%E3%80%90%E7%AE%97%E6%B3%9516%E3%80%91%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%BB%88%E7%BB%93%E7%AF%87%20-%20python27%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875.png" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_green_007200.png"></a><div id="profile_block">昵称：<a href="http://home.cnblogs.com/u/python27/">python27</a><br>园龄：<a href="http://home.cnblogs.com/u/python27/" title="入园时间：2011-11-23">4年2个月</a><br>粉丝：<a href="http://home.cnblogs.com/u/python27/followers/">132</a><br>关注：<a href="http://home.cnblogs.com/u/python27/followees/">3</a><div id="p_b_follow"><a href="javascript:void(0);" onclick="cnblogs.UserManager.FollowBlogger('75353f6d-d215-e111-b422-842b2b196315')">+加关注</a></div></div></div><script type="text/javascript">loadBlogNews();</script>
</div>

			<div id="blog-calendar" style="display:none"></div><script type="text/javascript">loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"><div id="sidebar_search" class="sidebar-block"></div><div id="sidebar_toptags" class="sidebar-block">
<div class="catListTag">
<h3 class="catListTitle">我的标签</h3>
<ul>
<li><a href="http://www.cnblogs.com/python27/tag/%E7%AE%97%E6%B3%95/">算法</a>(38)</li><li><a href="http://www.cnblogs.com/python27/tag/C%2B%2B/">C++</a>(29)</li><li><a href="http://www.cnblogs.com/python27/tag/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/">机器学习</a>(10)</li><li><a href="http://www.cnblogs.com/python27/tag/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/">动态规划</a>(3)</li><li><a href="http://www.cnblogs.com/python27/tag/%E6%95%B0%E5%AD%A6/">数学</a>(3)</li><li><a href="http://www.cnblogs.com/python27/tag/%E9%9D%A2%E8%AF%95%E9%A2%98/">面试题</a>(2)</li><li><a href="http://www.cnblogs.com/python27/tag/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/">操作系统</a>(1)</li>
</ul>
</div></div><div id="sidebar_categories">
</div><div id="sidebar_scorerank" class="sidebar-block">
<div class="catListBlogRank">
<h3 class="catListTitle">积分与排名</h3>
<ul>
	<li class="liScore">
		积分 -	53195
	</li>
	<li class="liRank">
		排名 -	4069
	</li>
</ul>
</div>


</div><div id="sidebar_topviewedposts" class="sidebar-block"><div id="topview_posts_wrap">
<div class="catListView">
<h3 class="catListTitle">阅读排行榜</h3>
	<div id="TopViewPostsBlock"><ul><li><a href="http://www.cnblogs.com/python27/archive/2011/12/09/2282486.html">1. 【算法16】递归算法的时间复杂度终结篇(8433)</a></li><li><a href="http://www.cnblogs.com/python27/archive/2013/04/14/3017448.html">2. 【Git】Git学习手册(5632)</a></li><li><a href="http://www.cnblogs.com/python27/p/3303721.html">3. 【算法27】硬币面值组合问题(4172)</a></li><li><a href="http://www.cnblogs.com/python27/archive/2011/11/25/2261980.html">4. 【算法02】3种方法求解斐波那契数列(3916)</a></li><li><a href="http://www.cnblogs.com/python27/archive/2012/04/08/2438009.html">5. 【编程之美】金刚坐飞机问题(3418)</a></li></ul></div>
</div>
</div></div><div id="sidebar_topdiggedposts" class="sidebar-block"><div id="topdigg_posts_wrap">
<div class="catListView">
<h3 class="catListTitle">推荐排行榜</h3>
<div id="TopDiggPostsBlock"><ul><li><a href="http://www.cnblogs.com/python27/archive/2011/12/09/2282486.html">1. 【算法16】递归算法的时间复杂度终结篇(9)</a></li><li><a href="http://www.cnblogs.com/python27/archive/2011/12/07/2279980.html">2. 【算法14】找出数组中两个只出现一次的数字(5)</a></li><li><a href="http://www.cnblogs.com/python27/archive/2011/11/24/2261550.html">3. 【算法01】寻找丑数(3)</a></li><li><a href="http://www.cnblogs.com/python27/archive/2011/12/14/2288205.html">4. 【算法21】从1到n的正数中1的出现次数(3)</a></li><li><a href="http://www.cnblogs.com/python27/archive/2011/12/16/2290760.html">5. 【算法23】把字符串转换成整数(2)</a></li></ul></div>
</div></div></div></div><script type="text/javascript">loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		
<!--done-->
Copyright ©2016 python27
	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


</body></html>